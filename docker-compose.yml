services:
  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_REGION: ${MINIO_REGION}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  minio-init:
    container_name: minio-init
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_API_URL: ${S3_API_URL}
    entrypoint: sh /init.sh
    volumes:
      - ./minio_init.sh:/init.sh

  postgres:
    container_name: postgres
    image: postgres:18.0
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    depends_on:
      postgres:
        condition: service_healthy
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 8888
      PGADMIN_DISABLE_POSTFIX: true
      GUNICORN_ACCESS_LOGFILE: "/dev/null"
    ports:
      - "8888:8888"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin_config/servers.json:/pgadmin4/servers.json
      - ./pgadmin_config/preferences.json:/pgadmin4/preferences.json

  db_prisma:
    depends_on:
      postgres:
        condition: service_healthy
    image: gitea.home.anonymus09.com/admin/db:latest
    container_name: db_prisma
    environment:
      DATABASE_URL: ${DATABASE_URL}

  asset_server:
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      db_prisma:
        condition: service_completed_successfully
    image: gitea.home.anonymus09.com/admin/asset_server:latest
    container_name: asset_server
    restart: unless-stopped
    environment:
      DATABASE_URL: ${DATABASE_URL}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_API_URL: ${S3_API_URL}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${MINIO_REGION}
      SERVER_IP_PORT: 127.0.0.1:3001
    ports:
      - "3001:3001"

  asset_manager:
    depends_on:
      asset_server:
        condition: service_started
    image: gitea.home.anonymus09.com/admin/asset_manager:latest
    restart: unless-stopped
    container_name: asset_manager
    ports:
      - "3000:3000"

volumes:
  minio_data:
  postgres_data:
  pgadmin_data:
